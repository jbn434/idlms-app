name: Deploy Node App via Podman

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Podman (CI Runner)
      run: |
        sudo apt update
        sudo apt install -y podman

    - name: Build Podman Image
      run: |
        podman build -t idlms-app .

    - name: Save Podman Image as Archive
      run: |
        podman save -o idlms-app.tar localhost/idlms-app

    - name: Copy Image to Remote Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        scp -i key.pem -o StrictHostKeyChecking=no idlms-app.tar $REMOTE_USER@$REMOTE_HOST:/tmp/idlms-app.tar

    - name: Deploy Node App on Remote Server via Podman
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        ssh -i key.pem -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
          # Install Podman if not installed
          if ! command -v podman &> /dev/null; then
            echo "ðŸ”§ Installing Podman..."
            sudo apt update
            sudo apt install -y podman
          else
            echo "âœ… Podman already installed"
          fi

          # Create pod if not exists
          podman pod create --name idlms-pod -p 4000:4000 || true

          # Load new image
          podman load -i /tmp/idlms-app.tar

          # Stop and remove old container if exists
          podman stop idlms-app || true
          podman rm idlms-app || true

          # Run the new container
          podman run -d --name idlms-app --pod idlms-pod \
            --env-file /opt/idlms/.env \
            localhost/idlms-app
        EOF
